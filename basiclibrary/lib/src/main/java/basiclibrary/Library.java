/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package basiclibrary;

import java.util.Arrays;
import java.util.Random;

public class Library {
    public boolean someLibraryMethod() {
        return true;
    }

    public static void main(String[] args) {
        int[] num = roll(7);
        for(int rolls : num){
            System.out.println(rolls);
        }
        int[] testArr = {1 ,4 , 5 , 4 , 2};
        System.out.println(containsDuplicates(testArr));

        int[] testAvg = { 4 , 7 , 2 , 7};
        System.out.println(calculatingAverages(testAvg));

        int[][] weeklyMonthTemperatures = {
                {66, 64, 58, 65, 71, 57, 60},
                {57, 65, 65, 70, 72, 65, 51},
                {55, 54, 60, 53, 59, 57, 61},
                {65, 56, 55, 52, 55, 62, 57}
        };
        int lowestIndex = findLowestAverageIndex(weeklyMonthTemperatures);
        int[] lowestAverageArray = weeklyMonthTemperatures[lowestIndex];

        System.out.println("Array with the lowest average temperature:");
        for (int temperature : lowestAverageArray) {
            System.out.print(temperature + " ");
        }
    }

    public static int[] roll(int n){
        int[] dice = new int[n];
        Random random = new Random();
        for(int i = 0 ; i < dice.length ; i++){
            dice[i] = random.nextInt(7);
        }
        return dice;
    }

    public static boolean containsDuplicates(int[] arr) {
        for (int i = 0; i < arr.length - 1; i++) {
            for (int j = i + 1; j < arr.length; j++) {
                if (arr[i] == arr[j]) {
                    return true;
                }
            }
        }
        return false;
    }

    public static int calculatingAverages(int[] arr){
        int sum = 0;
        for (int i = 0; i < arr.length ; i++) {
            sum += arr[i];
        }
        return sum / arr.length;
    }

    public static int findLowestAverageIndex(int[][] arrays) {
        int lowestIndex = 0;
        double lowestAverage = calculateAverage(arrays[0]);

        for (int i = 1; i < arrays.length; i++) {
            double average = calculateAverage(arrays[i]);
            if (average < lowestAverage) {
                lowestAverage = average;
                lowestIndex = i;
            }
        }

        return lowestIndex;
    }

    public static double calculateAverage(int[] array) {
        int sum = 0;
        for (int num : array) {
            sum += num;
        }
        return (double) sum / array.length;
    }
}
